# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import sales_item_service_pb2 as sales__item__service__pb2


class SalesItemServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createSalesItem = channel.unary_unary(
            '/salesitemservice.SalesItemService/createSalesItem',
            request_serializer=sales__item__service__pb2.InputSalesItem.SerializeToString,
            response_deserializer=sales__item__service__pb2.OutputSalesItem.FromString,
        )
        self.getSalesItems = channel.unary_unary(
            '/salesitemservice.SalesItemService/getSalesItems',
            request_serializer=sales__item__service__pb2.GetSalesItemsArg.SerializeToString,
            response_deserializer=sales__item__service__pb2.OutputSalesItems.FromString,
        )
        self.getSalesItem = channel.unary_unary(
            '/salesitemservice.SalesItemService/getSalesItem',
            request_serializer=sales__item__service__pb2.Id.SerializeToString,
            response_deserializer=sales__item__service__pb2.OutputSalesItem.FromString,
        )
        self.updateSalesItem = channel.unary_unary(
            '/salesitemservice.SalesItemService/updateSalesItem',
            request_serializer=sales__item__service__pb2.SalesItemUpdate.SerializeToString,
            response_deserializer=sales__item__service__pb2.Nothing.FromString,
        )
        self.deleteSalesItem = channel.unary_unary(
            '/salesitemservice.SalesItemService/deleteSalesItem',
            request_serializer=sales__item__service__pb2.Id.SerializeToString,
            response_deserializer=sales__item__service__pb2.Nothing.FromString,
        )


class SalesItemServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createSalesItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSalesItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getSalesItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateSalesItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteSalesItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SalesItemServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'createSalesItem': grpc.unary_unary_rpc_method_handler(
            servicer.createSalesItem,
            request_deserializer=sales__item__service__pb2.InputSalesItem.FromString,
            response_serializer=sales__item__service__pb2.OutputSalesItem.SerializeToString,
        ),
        'getSalesItems': grpc.unary_unary_rpc_method_handler(
            servicer.getSalesItems,
            request_deserializer=sales__item__service__pb2.GetSalesItemsArg.FromString,
            response_serializer=sales__item__service__pb2.OutputSalesItems.SerializeToString,
        ),
        'getSalesItem': grpc.unary_unary_rpc_method_handler(
            servicer.getSalesItem,
            request_deserializer=sales__item__service__pb2.Id.FromString,
            response_serializer=sales__item__service__pb2.OutputSalesItem.SerializeToString,
        ),
        'updateSalesItem': grpc.unary_unary_rpc_method_handler(
            servicer.updateSalesItem,
            request_deserializer=sales__item__service__pb2.SalesItemUpdate.FromString,
            response_serializer=sales__item__service__pb2.Nothing.SerializeToString,
        ),
        'deleteSalesItem': grpc.unary_unary_rpc_method_handler(
            servicer.deleteSalesItem,
            request_deserializer=sales__item__service__pb2.Id.FromString,
            response_serializer=sales__item__service__pb2.Nothing.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'salesitemservice.SalesItemService', rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class SalesItemService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createSalesItem(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salesitemservice.SalesItemService/createSalesItem',
            sales__item__service__pb2.InputSalesItem.SerializeToString,
            sales__item__service__pb2.OutputSalesItem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def getSalesItems(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salesitemservice.SalesItemService/getSalesItems',
            sales__item__service__pb2.GetSalesItemsArg.SerializeToString,
            sales__item__service__pb2.OutputSalesItems.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def getSalesItem(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salesitemservice.SalesItemService/getSalesItem',
            sales__item__service__pb2.Id.SerializeToString,
            sales__item__service__pb2.OutputSalesItem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def updateSalesItem(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salesitemservice.SalesItemService/updateSalesItem',
            sales__item__service__pb2.SalesItemUpdate.SerializeToString,
            sales__item__service__pb2.Nothing.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def deleteSalesItem(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salesitemservice.SalesItemService/deleteSalesItem',
            sales__item__service__pb2.Id.SerializeToString,
            sales__item__service__pb2.Nothing.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
